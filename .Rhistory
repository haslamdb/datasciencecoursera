View(dataNew)
for (i in 1:length(dataNew$interval)) {
if (is.na(dataNew$steps.x[i])) {
dataNew$steps.x[i]<-dataNew$steps.y[i], dataNew$steps.x[i]<-dataNew$steps.x
}
}
for (i in 1:length(dataNew$interval)) {
elseif (is.na(dataNew$steps.x[i])) {
dataNew$steps.x[i]<-dataNew$steps.y[i], dataNew$steps.x[i]<-dataNew$steps.x
}
}
for (i in 1:length(dataNew$interval)) {
elseif (is.na(dataNew$steps.x[i])) {
)dataNew$steps.x[i]<-dataNew$steps.y[i]), (dataNew$steps.x[i]<-dataNew$steps.x)
}
}
meanImpute <- function(x){
if (is.na(x)) {
dataNew$steps.x<-dataNew$steps.y
}
meanImpute <- function(x){
if (is.na(x)) {
dataNew$steps.x<-dataNew$steps.y
}
}
dataNew2<-tapply(dataNew, meanImpute)
help(tapply)
meanImpute <- function(x){
if (is.na(dataNew$steps.x)) {
dataNew$steps.x<-dataNew$steps.y
}
}
dataNew2<-tapply(dataNew, meanImpute)
meanImpute <- function(x){
if (x)) {
dataNew$steps.x<-dataNew$steps.y
}
}
meanImpute <- function(x){
if (x)) {
dataNew$steps.x<-dataNew$steps.y
}
}
meanImpute <- function(x){
if (is.na(x)) {
dataNew$steps.x<-dataNew$steps.y
}
}
dataNew2<-tapply(dataNew$steps.x, meanImpute)
dataNew2<-tapply(dataNew$steps.x, FUN = meanImpute)
for (i in 1:nrow(newData)) {
meanImpute(dataNew$steps[i])
}
nrow(newData)
for (i in 1:nrow(dataNew)) {
meanImpute(dataNew$steps[i])
}
nrow(dataNew)
for (i in 1:nrow(dataNew)) {
if (is.na(dataNew$steps.x[i])) {
dataNew$steps.x[i]<-dataNew$steps.y[i]
}
}
View(dataNew)
dataNew<-merge(data, aggInterval, by=c("interval"), all.x=TRUE)
for (i in 1:nrow(dataNew)) {
if (is.na(dataNew$steps.x[i])) {
dataNew$steps.x[i]<-dataNew$steps.y[i]
}
}
View(dataNew)
summary(dataNew)
dataNew<-merge(data, aggInterval, by=c("interval"), all.x=TRUE)
summary(dataNew)
for (i in 1:nrow(dataNew)) {
if (is.na(dataNew$steps.x[i])) {
dataNew$steps.x[i]<-dataNew$steps.y[i]
}
}
summary(dataNew)
View(dataNew)
View(data)
dataImpute<-dataNew[2,3,1]
dataImpute<-dataNew[,c(2,3,1)]
View(dataNew)
View(dataImpute)
names(dataImpute)<- c("steps", "date", "interval")
View(dataImpute)
imputePlot <- ggplot(dataImpute, aes(x=steps))
imputePlot + geom_histogram(binwidth=5)
meanImpute<-mean(dataImpute$steps)
meanImpute
medianImpute<-median(dataImpute$steps)
medianImpute
datePlot <- ggplot(aggDate, aes(x=steps))
datePlot + geom_histogram(binwidth=5)
meanSteps<-mean(aggDate$steps)
meanSteps
medianSteps<-median(aggDate$steps)
medianSteps
aggImpute <- aggregate(steps ~ date, dataImpute, FUN = mean, na.rm = TRUE)
imputePlot <- ggplot(aggImpute, aes(x=steps))
imputePlot + geom_histogram(binwidth=5)
meanImpute<-mean(aggImpute$steps)
meanImpute
medianImpute<-median(aggImpute$steps)
medianImpute
imputePlot <- ggplot(aggImpute, aes(x=steps))
imputePlot + geom_histogram(binwidth=5)
imputePlot <- ggplot(aggImpute, aes(x=steps))
imputePlot + geom_histogram(binwidth=1)
imputePlot <- ggplot(aggImpute, aes(x=steps))
imputePlot + geom_histogram(binwidth=10)
datePlot <- ggplot(aggDate, aes(x=steps))
datePlot + geom_histogram(binwidth=10)
imputePlot <- ggplot(aggImpute, aes(x=steps))
imputePlot + geom_histogram(binwidth=10)
weekday(dataImpute$date)
weekdays(dataImpute$date)
weekdays<-c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
weekends<- c("Saturday", "Sunday")
dataImpute$weekday<-ifelse(dataImpute$date %in% weekdays, "wd", "we" ))
dataImpute$weekday<-ifelse(dataImpute$date %in% weekdays, "wd", "we" )
View(dataImpute)
dataImpute$weekday<-ifelse(weekdays(dataImpute$date) %in% weekdays, "wd", "we" )
View(dataImpute)
weekdayData<-aggregate(steps ~ interval + weekday, dataImpute, FUN=mean, na.rm = TRUE)
View(weekdayData)
weekdayPlot<- ggplot(weekdayData, aes(interval, steps))
weekdayPlot + geom_point() + geom_line()
weekdayPlot<- ggplot(weekdayData, aes(interval, steps))
weekdayPlot + geom_point() + geom_line() + facet_grid(.weekday)
weekdayPlot + geom_point() + geom_line() + facet_grid(.~weekday)
dataImpute$weekday<-ifelse(weekdays(dataImpute$date) %in% weekdays, "weekday", "weekend" )
weekdayData<-aggregate(steps ~ interval + weekday, dataImpute, FUN=mean, na.rm = TRUE)
weekdayPlot<- ggplot(weekdayData, aes(interval, steps))
weekdayPlot + geom_point() + geom_line() + facet_grid(.~weekday)
weekdayPlot<- ggplot(weekdayData, aes(interval, steps))
weekdayPlot + geom_point() + geom_line() + facet_grid(weekday ~ .)
source('~/Code/R/Projects/Coursera/Reproducible.R', echo=TRUE)
source('~/Code/R/Projects/Coursera/Reproducible.R', echo=TRUE)
aggInterval<-aggregate(steps ~ interval, aggDate, FUN=mean, na.rm = TRUE)
View(aggDate)
aggInterval<-aggregate(steps ~ interval, data, FUN=mean, na.rm = TRUE)
View(aggInterval)
intervalPlot<- ggplot(aggInterval, aes(interval, steps))
intervalPlot + geom_point() + geom_line()
maxSteps<-max(aggInterval$steps)
maxInterval<-subset(aggInterval, aggInterval$steps==max(aggInterval$steps))
maxInterval$interval
source('~/Code/R/Projects/Coursera/Reproducible.R', echo=TRUE)
data<-read.csv("activity.csv", header = TRUE, stringsAsFactor=FALSE)
```
# Reproducible Research : Assignment 1
data<-read.csv("activity.csv", header = TRUE, stringsAsFactor=FALSE)
data$date<-as.Date(data$date, format="%Y-%m-%d")
# What is mean total number of steps taken per day?
aggDate <- aggregate(steps ~ date, data, FUN = mean, na.rm = TRUE)
datePlot <- ggplot(aggDate, aes(x=steps))
datePlot + geom_histogram(binwidth=10)
meanSteps<-mean(aggDate$steps)
meanSteps
medianSteps<-median(aggDate$steps)
medianSteps
# What is the average daily activity pattern?
aggInterval<-aggregate(steps ~ interval, data, FUN=mean, na.rm = TRUE)
intervalPlot<- ggplot(aggInterval, aes(interval, steps))
intervalPlot + geom_point() + geom_line()
maxSteps<-max(aggInterval$steps)
maxInterval<-subset(aggInterval, aggInterval$steps==max(aggInterval$steps))
maxInterval$interval
# Imputing missing values
missingIntervals<-sum(is.na(data$steps))
missingIntervals
dataNew<-merge(data, aggInterval, by=c("interval"), all.x=TRUE)
for (i in 1:nrow(dataNew)) {
if (is.na(dataNew$steps.x[i])) {
dataNew$steps.x[i]<-dataNew$steps.y[i]
}
}
dataImpute<-dataNew[,c(2,3,1)]
names(dataImpute)<- c("steps", "date", "interval")
aggImpute <- aggregate(steps ~ date, dataImpute, FUN = mean, na.rm = TRUE)
imputePlot <- ggplot(aggImpute, aes(x=steps))
imputePlot + geom_histogram(binwidth=10)
meanImpute<-mean(aggImpute$steps)
meanImpute
medianImpute<-median(aggImpute$steps)
medianImpute
# Are there differences in activity patterns between weekdays and weekends?
weekdays<-c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
weekends<- c("Saturday", "Sunday")
dataImpute$weekday<-ifelse(weekdays(dataImpute$date) %in% weekdays, "weekday", "weekend" )
weekdayData<-aggregate(steps ~ interval + weekday, dataImpute, FUN=mean, na.rm = TRUE)
weekdayPlot<- ggplot(weekdayData, aes(interval, steps))
weekdayPlot + geom_point() + geom_line() + facet_grid(weekday ~ .)
```{r}
getwd()
data<-read.csv("~/Coursera"activity.csv", header = TRUE, stringsAsFactor=FALSE)
data<-read.csv("~/Coursera/activity.csv", header = TRUE, stringsAsFactor=FALSE)
data<-read.csv("~Projects/R/Coursera/activity.csv", header = TRUE, stringsAsFactor=FALSE)
data<-read.csv("~R/Projects/Coursera/activity.csv", header = TRUE, stringsAsFactor=FALSE)
data<-read.csv("~ /R/Projects/Coursera/activity.csv", header = TRUE, stringsAsFactor=FALSE)
data<-read.csv("~ Code/R/Projects/Coursera/activity.csv", header = TRUE, stringsAsFactor=FALSE)
data<-read.csv("~ /Code/R/Projects/Coursera/activity.csv", header = TRUE, stringsAsFactor=FALSE)
getwd()
data<-read.csv("C:/Users/David/Documents/Code/R/Projects/Coursera/activity.csv", header = TRUE, stringsAsFactor=FALSE)
knit2html(PA1_template.Rmd)
library(ggplot2); library(knitr)
install.packages("markdown")
library(ggplot2); library(knitr); library(markdown)
knit2html(input=PA1_template.Rmd, output=PA1_template.HTML)
knit2html(input="PA1_template.Rmd", output="PA1_template.HTML")
knit2html(input="PA1_template.Rmd", output="PA1_template.HTML")
knit2html(input="PA1_template.Rmd", output="PA1_template.HTML")
knit2html(input="PA1_template.Rmd", output="PA1_template.HTML")
# Reproducible Research : Assignment 1
library(ggplot2); library(knitr); library(markdown)
setwd("C:/Users/David/Documents/Code/R/Projects/Coursera")
data<-read.csv("activity.csv", header = TRUE, stringsAsFactor=FALSE)
data$date<-as.Date(data$date, format="%Y-%m-%d")
# What is mean total number of steps taken per day?
aggDate <- aggregate(steps ~ date, data, FUN = mean, na.rm = TRUE)
datePlot <- ggplot(aggDate, aes(x=steps))
datePlot + geom_histogram(binwidth=10)
meanSteps<-mean(aggDate$steps)
meanSteps
medianSteps<-median(aggDate$steps)
medianSteps
# What is the average daily activity pattern?
aggInterval<-aggregate(steps ~ interval, data, FUN=mean, na.rm = TRUE)
intervalPlot<- ggplot(aggInterval, aes(interval, steps))
intervalPlot + geom_point() + geom_line()
maxSteps<-max(aggInterval$steps)
maxInterval<-subset(aggInterval, aggInterval$steps==max(aggInterval$steps))
maxInterval$interval
# Imputing missing values
missingIntervals<-sum(is.na(data$steps))
missingIntervals
dataNew<-merge(data, aggInterval, by=c("interval"), all.x=TRUE)
for (i in 1:nrow(dataNew)) {
if (is.na(dataNew$steps.x[i])) {
dataNew$steps.x[i]<-dataNew$steps.y[i]
}
}
dataImpute<-dataNew[,c(2,3,1)]
names(dataImpute)<- c("steps", "date", "interval")
aggImpute <- aggregate(steps ~ date, dataImpute, FUN = mean, na.rm = TRUE)
imputePlot <- ggplot(aggImpute, aes(x=steps))
imputePlot + geom_histogram(binwidth=10)
meanImpute<-mean(aggImpute$steps)
meanImpute
medianImpute<-median(aggImpute$steps)
medianImpute
# Are there differences in activity patterns between weekdays and weekends?
weekdays<-c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
weekends<- c("Saturday", "Sunday")
dataImpute$weekday<-ifelse(weekdays(dataImpute$date) %in% weekdays, "weekday", "weekend" )
weekdayData<-aggregate(steps ~ interval + weekday, dataImpute, FUN=mean, na.rm = TRUE)
weekdayPlot<- ggplot(weekdayData, aes(interval, steps))
weekdayPlot + geom_point() + geom_line() + facet_grid(weekday ~ .)
Survey<-read.csv("getdata_data_ss0hid.csv")
Survey<-read.csv("getdata_data_ss06hid.csv")
View(Survey)
agricultureLogical<-subset(Survey, Survey$ACR=="3" & Survey$AGS=="6")
which(agricultureLogical)
which(Survey)
which(Survey, Survey$ACR=="3" & Survey$AGS=="6")
help(which)
agricultureLogical<-(Survey$ACR=="3" & Survey$AGS=="6")
which(agricultureLogical)
install.packages("jpeg")
library(jpeg)
picture<-readJPEG(https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg , native = FALSE)
picture<-readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg" , native = FALSE)
picture<-readJPEG("getdata_jeff.jpg" , native = FALSE)
quantile(picture,  probs = c(30, 80)/100)
summary(picture)
picture<-readJPEG("getdata_jeff.jpg" , native = TRUE)
quantile(picture,  probs = c(30, 80)/100)
data<-read.csv("getdata_data_GDP.csv")
head(data)
read.csv("getdata_data_EDSTATS_Country")
data2<-read.csv("getdata_data_EDSTATS_Country.csv")
View(data)
View(data2)
data3<-merge(data, data2, by.x="X", by.y="CountryCode")
View(data3)
data3<-merge(data, data2, by.x="X", by.y="CountryCode", all = TRUE)
data3<-merge(data, data2, by.x="X", by.y="CountryCode", all.x = TRUE)
data3<-merge(data, data2, by.x="X", by.y="CountryCode", all.y = TRUE)
intersect(data$X, data2$CountryCode)
length(intersect(data$X, data2$CountryCode))
View(data3)
data3<-data3[order(-data3$Gross.domestic.product.2012),]
data3<-data3[order(data3$Gross.domestic.product.2012),]
head(data3)
View(data3)
str(data3)
data3$Gross.domestic.product.2012<-int(data3$Gross.domestic.product.2012)
data3$Gross.domestic.product.2012<-as.int(data3$Gross.domestic.product.2012)
data3$Gross.domestic.product.2012<-as.integer(data3$Gross.domestic.product.2012)
data3<-data3[order(-data3$Gross.domestic.product.2012),]
head(data3, 20)
View(data3)
data<-read.csv("getdata_data_GDP.csv")
data2<-read.csv("getdata_data_EDSTATS_Country.csv")
head(data3)
data<-read.csv("getdata_data_GDP.csv")
head(data)
data<-read.csv("getdata_data_GDP.csv")
head(data)
data3<-merge(data, data2, by.x="X", by.y="CountryCode")
View(data3)
data3<-merge(data, data2, by.x="X", by.y="CountryCode", all.y = TRUE)
View(data3)
data3$Rank<-as.integer(data3$Rank)
data3<-data3[order(-data3$Rank),]
View(data3)
HO<- subset(data3, data3$Income.Group=="High income: nonOECD")
mean(HO$Rank)
View(HO)
data3<-merge(data, data2, by.x="X", by.y="CountryCode", all= TRUE)
data3<-data3[order(-data3$Rank),]
View(data3)
View(data)
data<-read.csv("getdata_data_GDP.csv")
data3<-merge(data, data2, by.x="X", by.y="CountryCode", all.y = TRUE)
View(data3)
data3$Rank<-as.integer(data3$Rank)
data3<-data3[order(-data3$Rank),]
View(data3)
HO<- subset(data3, data3$Income.Group=="High income: nonOECD")
mean(HO$Rank)
View(HO)
mean(HO$Rank, rm.na=TRUE)
str(HO$Rank)
HO$Rank
mean(HO$Rank, na.rm=TRUE)
cut(data3, breaks=c(quantile(data3$Rank, probs = seq(0, lenght(data3$Rank), by = 0.20))))
quant<-quantile(data3$Rank, c(20,40,60,80,100))
quant<-quantile(data3$Rank, c(20,40,60,80,100) na.rm=TRUE)
quant<-quantile(data3$Rank, c(20,40,60,80,100), na.rm=TRUE)
quant<-quantile(data3$Rank, c(20,40,60,80,100)/100, na.rm=TRUE)
H2<-subset(data3, data3$Rank < 39)
count(H2$Income Group)
View(`H2`)
count(H2[8])
table(H2[8])
Xtest<-read.table(X_test.txt)
Xtest<-read.table("/UCI HAR Dataset/test/X_test.txt")
getwd()
setwd("C:/Users/David/Documents/Code/R/Projects/Coursera/UCI HAR Dataset")
Xtest<-read.table("/test/X_test.txt")
setwd("C:/Users/David/Documents/Code/R/Projects/Coursera/UCI HAR Dataset/test")
Xtest<-read.table("X_test.txt")
subject_test<-read.table("subject_test.txt")
Xtest<-read.table("X_test.txt")
y_test<-read.table("y_test.txt")
View(subject_test)
View(y_test)
setwd("C:/Users/David/Documents/Code/R/Projects/Coursera/UCI HAR Dataset/test/Inertial Signals")
body_acc_y_test<-read.table("body_acc_y_test")
body_acc_y_test<-read.table("body_acc_y_test")
body_gyro_z_test<-read.table("body_gyro_z_test")
body_gyro_z_test<-read.table("body_gyro_z_test.txt")
body_acc_y_test<-read.table("body_acc_y_test.txt")
body_acc_x_test<-read.table("body_acc_x_test.txt")
body_acc_z_test<-read.table("body_acc_z_test.txt")
body_gyro_x_test<-read.table("body_gyro_x_test.txt")
body_gyro_y_test<-read.table("body_gyro_y_test.txt")
total_acc_y_test<-read.table("total_acc_y_test.txt")
total_acc_x_test<-read.table("total_acc_x_test.txt")
total_acc_z_test<-read.table("total_acc_z_test.txt")
X_test<-read.table("X_test.txt")
setwd("C:/Users/David/Documents/Code/R/Projects/Coursera/UCI HAR Dataset/test")
X_test<-read.table("X_test.txt")
rm(xtest)
rm(Xtest)
# merge Subject and Y to each dataframe
dataFiles<- c("body_acc_y_test", "body_acc_x_test", "body_acc_z_test", "body_gyro_x_test",
"body_gyro_y_test", "body_gyro_z_test", "total_acc_x_test", "total_acc_y_test",
"total_acc_z_test" )
for (i in 1:length(dataFiles)) {
i<-merge(y_test, i)
i<-merge(subject_test, i)
}
for (i in 1:length(dataFiles)) {
dataFiles[i]<-merge(y_test, dataFiles[i])
dataFiles[i]<-merge(subject_test, dataFiles[i])
}
warnings()
head(body_acc_y_test)
datafiles[1]
dataFiles[1]
dataFiles
dataFiles<- c("body_acc_y_test", "body_acc_x_test", "body_acc_z_test", "body_gyro_x_test",
"body_gyro_y_test", "body_gyro_z_test", "total_acc_x_test", "total_acc_y_test",
"total_acc_z_test" )
dataFiles
dataFiles[1]
length(dataFiles)
for (i in 1:length(dataFiles)) {
dataFiles[i]<-cbind(y_test, dataFiles[i])
dataFiles[i]<-cbind(subject_test, dataFiles[i])
}
warnings()
View(y_test)
View(X_test)
View(subject_test)
cbind(body_gyro_z_test, y_test)
head(cbind(body_gyro_z_test, y_test))
head(cbind(y_test, body_gyro_z_test))
for (i in 1:length(dataFiles)) {
dataFiles[i]<-cbind(y_test, dataFiles[i])
}
tags<-cbind(subject_test, y_test)
for (i in 1:length(dataFiles)) {
dataFiles[i]<-cbind(tages, dataFiles[i])
}
for (i in 1:length(dataFiles)) {
dataFiles[i]<-cbind(tags, dataFiles[i])
}
head(cbind(tags,body_acc_y_test)
head(cbind(tags,body_acc_y_test) )
do.call("cbind", lapply(tags,dataFiles))
do.call("cbind", lapply(dataFiles, tags))
lapply(dataFiles, cbind(tags))
do.call("cbind",lapply(dataFiles,tags))
cbind(tags,dataFiles[1])
cbind(tags,dataFiles[1])
dataFiles[1]
tags
test<-cbind(tags,dataFiles[1])
head(test)
dataFiles<- c("body_acc_y_test", "body_acc_x_test", "body_acc_z_test", "body_gyro_x_test",
"body_gyro_y_test", "body_gyro_z_test", "total_acc_x_test", "total_acc_y_test",
"total_acc_z_test" )
test<-cbind(tags,dataFiles[1])
head(test)
files<-c(tags, dataFiles)
lapply(files, cbind)
# merge Subject and Y to each dataframe
dataFiles<- c(body_acc_y_test, body_acc_x_test, body_acc_z_test, body_gyro_x_test,
body_gyro_y_test, body_gyro_z_test, total_acc_x_test, total_acc_y_test,
total_acc_z_test )
for (i in 1:length(dataFiles)) {
dataFiles[i]<-cbind(tags, dataFiles[i])
}
warnings
lapply(files, cbind)
files<-c(dataFiles, tags)
lapply(files, cbind)
test<-lapply(files, cbind)
wd<-"C:/Users/David/Documents/Code/R/Projects/Coursera/UCI HAR Dataset/test/Inertial Signals"
filenames <- list.files(wd)
filenames
filenames[1]
lapply(filenames, read.table, header = FALSE)
setwd(wd)
lapply(filenames, read.table, header = FALSE)
for (i in 1:length(filenames)) {
filenames[i]<-read.table(filenames[i], header=FALSE)
}
filenames[1]
rm(test)
rm(dataFiles)
rm(filenames)
rm(files)
wd<-"C:/Users/David/Documents/Code/R/Projects/Coursera/UCI HAR Dataset/test/Inertial Signals"
filenames <- list.files(wd)
for (i in 1:length(filenames)) {
filenames[i]<-read.table(filenames[i], header=FALSE)
}
filenames[1]
str(filenames)
rm(filenames)
dataFiles<- c(body_acc_y_test, body_acc_x_test, body_acc_z_test, body_gyro_x_test,
body_gyro_y_test, body_gyro_z_test, total_acc_x_test, total_acc_y_test,
total_acc_z_test )
rm(dataFiles)
filenames2 <- list.files(wd pattern="*.csv", full.names=TRUE)
filenames2 <- list.files(wd, pattern="*.csv", full.names=TRUE)
filenames2 <- list.files(wd, pattern="*.txt")
ldf <- lapply(filenames2, read.table)
str(ldf)
ldf[1]
str(ldf[1])
res <- lapply(ldf, summary)
names(res) <- substr(filenames, 6, 30)
names(res) <- substr(filenames2, 6, 30)
ldf <- plyr::ldply(filenames2, read.table)
ldf <- plyr::ldply(filenames2, read.table)
wd<-"C:/Users/David/Documents/Code/R/Projects/Coursera/UCI HAR Dataset/test/Inertial Signals"
filenames2 <- list.files(wd, pattern="*.txt")
ldf <- plyr::ldply(filenames2, read.table)
res <- plyr::ldply(ldf, summary)
for (i in 1:length(filenames)) {
filenames[[i]] <- lapply(filenames[i], read.table)
}
for (i in 1:length(filenames2)) {
filenames2[[i]] <- lapply(filenames2[i], read.table)
}
wd<-"C:/Users/David/Documents/Code/R/Projects/Coursera/UCI HAR Dataset/test/Inertial Signals"
filenames <- list.files(wd)
for (i in 1:length(filenames2)) {
filenames[[i]] <- lapply(filenames[[i]], read.table)
}
filenames <- list.files(wd)
for (i in 1:length(filenames2)) {
filenames[[i]] <- read.table(filenames[[i]])
}
