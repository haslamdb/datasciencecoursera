x_4
x<-4
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- 1:4
y <- 2:3
x + y
pwd()
getwd()
read.csv(hw1.csv)
read.csv(hw1_data.csv)
read.csv(hw1_data)
read.csv("hw1d_data.csv")
read.csv("hw1_data.csv")
data<-read.csv("hw1_data.csv")
View(data)
tst<-data[1:2,]
View(tst)
data[152:153,]
data[47,1]
is.na(data$Ozone)
table(is.na(data$Ozone))
mean(data$Ozone, na.rm=TRUE)
q2<-data[, data$Ozone > 31 & data$Temp < 90]
q2<-subset(data, data$Ozone > 31 & data$Temp < 90)
mean(q2.Solar.R)
mean(q2$Solar.R)
View(`q2`)
mean(q2$Solar.R, na.rm=TRUE)
q2<-subset(data, data$Ozone > 31 & data$Temp > 90)
mean(q2$Solar.R, na.rm=TRUE)
mean(data[Month=="6"])
q19<-subset(data, data$Month=="6")
mean(q19$Month)
mean(q19$Temp, na.rm=TRUE)
q20<-subset(data, data$Month=="5")
max(q20$Ozoone)
max(q20$Ozone)
max(q20$Ozone, na.rm=TRUE)
new<-download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv )
new<-read.csv("getdata_data_ss06hid.csv")
View(new)
q1<-subset(new, new$VAL=="24")
nrow(q1)
q1$FES
list(q1$FES)
q1[FES]
q1[q1$FES]
q1[,q1$FES]
q1[,FES]
q1[,"FES"]
getwd()
setwd("C:/Users/David/Documents/Code/R/Projects/Coursera")
install.packages("xlsx")
library(xlsx)
help(xlsx)
data<-read.xlsx(getdata_data_DAT.gov_NGAP.xlsx)
data<-read.xlsx(getdata_data_DAT.gov_NGAP.xlsx, 1)
data<-read.xlsx(getdata_data_DATA.gov_NGAP.xlsx, 1)
data<-read.xlsx("getdata_data_DATA.gov_NGAP.xlsx", 1)
View(data)
data<-read.xlsx("getdata_data_DATA.gov_NGAP.xlsx", 1, header=TRUE)
View(data)
dat<-data[18:23, 7:15]
sum(dat$Zip*dat$Ext,na.rm=T)
View(dat)
data<-read.xlsx("getdata_data_DATA.gov_NGAP.xlsx"[18:23,7:15], 1, header=TRUE)
data<-read.xlsx("getdata_data_DATA.gov_NGAP.xlsx", 1, header=TRUE)[18:23,7:15]
data
data<-read.xlsx("getdata_data_DATA.gov_NGAP.xlsx", 1)[18:23,7:15]
data
View(data)
data<-read.xlsx("getdata_data_DATA.gov_NGAP.xlsx", 1)[17:23,7:15]
View(data)
data<-read.xlsx("getdata_data_DATA.gov_NGAP.xlsx", 1, header=TRUE)[17:23,7:15]
View(data)
names(data)<-data[1,]
View(data)
names(data)<-data[,1]
View(data)
View(data)
data
data<-data[-1,]
data
sum(data$Zip*data$Ext,na.rm=T)
str(data)
dat<-as.numeric(data)
data$Zip<-as.numeric(data$Zip)
data$Ext<-as.numeric(data$Ext)
View(data)
colIndex<-7:15
rowIndex<-18:23
dat<-read.xlsx("getdata_data_DATA.gov_NGAP.xlsx", sheetIndex=1, colIndex=colIndex, rowIndex=rowIndex)
View(dat)
sum(dat$Zip*dat$Ext,na.rm=T)
if(!file.exists("data")){dir.create("data")}
fileUrl<-"https://data.baltimorecity.gov/api/views/dz54-2aru/rows.xlsx?acessType=DOWNLOAD"
dowload.file(fileUrl,destfile="./data/cameras.xlsx", method= "curl")
install.packages("utils")
install.packages("utils")
install.packages("utils")
install.packages("utils")
install.packages("utils")
install.packages("utils")
install.packages("utils")
library(utils)
download.file(fileUrl,destfile="./data/cameras.xlsx", method= "curl")
install.packages("XML")
library(XML)
FileUrl<-https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml
FileUrl<-https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml
FileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc<-xmlTreeParse(flieUrl, useInternal=TRUE)
doc<-xmlTreeParse(fileUrl, useInternal=TRUE)
doc<-xmlTreeParse("getdata_data_restaurants.xml")
rootNode<-xmlRoot(doc)
xmlName(rootNode)
doc<-xmlTreeParse("getdata_data_restaurants.xml", useInternal=TRUE)
rootNode<-xmlRoot(doc)
xmlName(rootNode)
xmlName(rootNode)
rootNode
xmlSApply(rootNode, xmlValue)
data<-xmlSApply(rootNode, xmlValue)
zip<-xpathSApply(rootNode,"//Zip", xmlValue)
zip<-xpathSApply(rootNode,"//zip", xmlValue)
xpathSApply(rootNode, "//name", xmlValue)
xpathSApply(rootNode, "//zip", xmlValue)
doc<-xmlTreeParse("getdata_data_restaurants.xml", useInternal=TRUE)
rootNode<-xmlRoot(doc)
xmlName(rootNode)
doc
zip<-xpathSApply(doc,"//li@class="zipcode"]", xmlValue)
zip<-xpathSApply(doc,"//li@class='zipcode']", xmlValue)
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(url,destfile="DT", method= "curl")
destfile<- "DT"
download.file(url,destfile)
source(DT)
source(destfile)
fread(destfile)
install.packages("data.table")
library(data.table)
help(fread)
fread("DT")
DT<-fread(DT)
DT<-fread("DT")
View(DT)
DT<-fread(DT)
summary(DT)
mean(DT$pwgtp15,by=DT$SEX)
sapply(split(DT$pwgtp15,DT$SEX),mean)
tapply(DT$pwgtp15,DT$SEX,mean)
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
str(DT$SEX)
tapply(DT$pwgtp15,DT$SEX,mean)
DT[,mean(pwgtp15),by=SEX]
system.time(DT[,mean(pwgtp15),by=SEX])
proc.time(DT[,mean(pwgtp15),by=SEX])
sum(dat$Zip*dat$Ext,na.rm=T)
tapply(DT$pwgtp15,DT$SEX,mean)
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
mean(DT$pwgtp15,by=DT$SEX)
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
DT[,mean(pwgtp15),by=SEX]
system.time(DT[,mean(pwgtp15),by=SEX])
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
install.packages("KernSmooth")
library(KernSmooth)
args(paste)
a<- "Yes"
b<- "No"
paste(a,b, sep="")
paste(a, b, sep=;)
paste(a, b, sep="";"")
paste(a, b, sep=";")
add2<-function(x,y) {
x + y
}
add2(2,3)
add2(9,8)
above<-function (x, n=10){
use<-x > n
x[use]
}
above(1:30)
above(1:30, 20)
columnMeans<- function(df, naremove=TRUE) {
nc<-ncol(df)
means<-numeric(nc)
for(i in 1:nc) {
means[i]<-mean(df[ ,i])
}
means
}
columnMeans(airquality)
columnMeans<- function(df, naremove=TRUE) {
nc<-ncol(df)
means<-numeric(nc)
for(i in 1:nc) {
means[i]<-mean(df[ ,i], nr.rm= naremove)
}
means
}
columnMeans(airquality)
columnMeans<- function(df, naremove=TRUE) {
nc<-ncol(df)
means<-numeric(nc)
for(i in 1:nc) {
means[i]<-mean(df[ ,i], na.rm= naremove)
}
means
}
columnMeans<- function(df, naremove=TRUE) {
nc<-ncol(df)
means<-numeric(nc)
for(i in 1:nc) {
means[i]<-mean(df[ ,i], na.rm = naremove)
}
means
}
columnMeans(airquality)
search()
install.packages("httr")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github", "56b637a5baffac62cad9")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
library(httpuv)
myapp <- oauth_app("github", "56b637a5baffac62cad9")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
install.packages("jsonlite")
library(jsonlite)
content(req)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
content(req)
acs<-read.csv(getdata_data_ss06pid.csv)
getwd()
acs<-read.csv("getdata_data_ss06pid.csv")
View(acs)
question<- GET("http://biostat.jhsph.edu/~jleek/contact.html")
content(question)
cont<-content(question)
nchar(cont[10,])
as.dataframe(cont)
as.data.frame(cont)
oauth_endpoints("github")
myapp <- oauth_app("github", " e4f3f0ad682c2245cd16f3008724740ecb58f08f ")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github", "e4f3f0ad682c2245cd16f3008724740ecb58f08f")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
oauth_endpoints("github")
GET https://github.com/login/oauth/authorize
GET ("https://github.com/login/oauth/authorize")
install.packages("XTML")
install.packages("XML")
install.packages("XML")
library(XML)
url<-"http://biostat.jhsph.edu/~jleek/contact.html"
html<-htmlTreeParse(url, useInternalNodes=T)
html<-readlines(url)
html<-readLines(url)
html<-as.data.frame(html)
View(html)
nchar(html[10,])
as.character(html)
nchar("<meta name="Distribution" content="Global" />")
str(html)
as.character(html[ ,1])
html<-as.character(html)
str(html)
html[10,]
html<-readLines(url)
html<-as.data.frame(html)
html<-as.character(html)
html<-readLines(url)
html<-as.data.frame(html)
nchar(html[10])
nchar(html[10,])
nchar(as.character(html[10,]))
nchar(as.character(html[20,]))
nchar(as.character(html[30,]))
url2<-"https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
html2<-readLines(url2)
html2
html2<-as.data.frame(html2)
View(html2)
html3<-html2[-4,]
html3
html3<-as.data.frame(as.numeric(html2[-4,-1])))
html3<-as.data.frame(html2[-4,-1])
View(html3)
html3<-as.data.frame(html2[-4,])
View(html3)
html2<-readLines(url2)
html3<-as.data.frame(html2[-4,])
View(html3)
html3<-as.data.frame(html2)
View(html3)
cube <- function(x, n) {
x^3
}
cube(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
f
